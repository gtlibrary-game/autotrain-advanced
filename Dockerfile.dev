# Use NVIDIA CUDA with Ubuntu 22.04 as the base image
FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

# Set noninteractive installation mode and timezone
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    PATH="/app/miniconda/bin:${PATH}"

# Install necessary packages
RUN apt-get update && \
    apt-get install -y wget git curl ca-certificates build-essential cmake && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Git LFS
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    apt-get update && \
    apt-get install -y git-lfs && \
    git lfs install && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Install Miniconda and create a conda environment
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh && \
    bash miniconda.sh -b -p /app/miniconda && \
    rm -f miniconda.sh && \
    conda create -p /app/env python=3.10 -y && \
    conda init bash

# Ensure package lists are updated and cache is cleared to avoid
# storing the package list in the layer
RUN apt-get update && \
    apt-get -y install pkg-config && \
    rm -rf /var/lib/apt/lists/*

# Activate the environment and install AutoTrain-Advanced and dependencies
RUN echo ".  activate /app/env" > ~/.bashrc && \
    . ~/.bashrc && \
    pip install autotrain-advanced && \
    conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia && \
    conda install -c "nvidia/label/cuda-12.1.0" cuda-nvcc && \
    conda clean -ya

WORKDIR /app/code

# Copy your application code (ensure you have a .dockerignore file)
COPY . /app/code

# Set the default command to run your application
CMD ["conda", "run", "-p", "/app/env", "autotrain", "app", "--port", "8080", "--host", "0.0.0.0"]
